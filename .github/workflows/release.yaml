name: Release vscode-server image

on:
  push:
    branches:
    - master

  schedule:
  - cron:  '0 0 * * 6'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
        - linux/amd64
        - linux/arm64
        variant:
        - focal
        - jammy
        - noble
    steps:
    - run: |
        PLATFORM=${{ matrix.platform }}

        case ${PLATFORM} in
        linux/amd64) VSCODE_OS=cli-alpine-x64;;
        linux/arm64) VSCODE_OS=cli-alpine-arm64;;
        *) echo "unsupported platform"; exit 1 ;;
        esac

        echo ARTIFACT_NAME=image-digest-${{ matrix.variant }}-${PLATFORM//\//-} >> $GITHUB_ENV
        echo VSCODE_URL="https://code.visualstudio.com/sha/download?build=stable&os=${VSCODE_OS}" >> $GITHUB_ENV
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/metadata-action@v5
      id: metadata
      with:
        images: ghcr.io/${{ github.repository }}
        labels: |
          org.opencontainers.image.authors=Yang Sheng Han
          org.opencontainers.image.documentation=https://github.com/${{ github.repository }}
          org.opencontainers.image.title=vscode-server-ubuntu-${{ matrix.variant }}
          org.opencontainers.image.vendor=https://github.com/${{ github.repository }}
          org.opencontainers.image.version=${{ github.sha }}
        tags: |
          type=raw,value=latest,enable=${{ matrix.variant == 'noble' }}
          type=raw,value=${{ matrix.variant }}
          type=schedule,pattern={{date 'YYYYMMDD'}},enable=${{ matrix.variant == 'noble' }}
          type=schedule,pattern={{date 'YYYYMMDD'}},suffix=${{ matrix.variant }}
    - id: build
      uses: docker/build-push-action@v6
      with:
        build-args: |
          DISTRO=ubuntu
          VARIANT=${{ matrix.variant }}
          VSCODE_URL=${{ env.VSCODE_URL }}

          DOCKER_VERSION=27.3.1
          GO_VERSION=1.23.2
          KUBECTL_VERSION=1.31.0
          NODE_VERSION=20.18.0
          PYTHON_VERSION=3.13.0
          RUST_VERSION=1.82.0
        labels: ${{ env.DOCKER_METADATA_OUTPUT_LABELS }}
        outputs: type=image,name=ghcr.io/${{ github.repository }},name-canonical=true,push=true,push-by-digest=true
        platforms: ${{ matrix.platform }}
    - run: |
        mkdir -p /tmp/image-digests
        touch /tmp/image-digests/${IMAGE_DIGEST#sha256:}
      env:
        IMAGE_DIGEST: ${{ steps.build.outputs.digest }}
    - uses: actions/upload-artifact@v5
      with:
        compression-level: 0
        if-no-files-found: error
        name: ${{ env.ARTIFACT_NAME }}
        path: /tmp/image-digests/*
        retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs:
    - build
    strategy:
      matrix:
        variant:
        - focal
        - jammy
        - noble
    steps:
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        labels: |
          org.opencontainers.image.authors=Yang Sheng Han
          org.opencontainers.image.documentation=https://github.com/${{ github.repository }}
          org.opencontainers.image.title=vscode-server-ubuntu-${{ matrix.variant }}
          org.opencontainers.image.vendor=https://github.com/${{ github.repository }}
          org.opencontainers.image.version=${{ github.sha }}
        tags: |
          type=raw,value=latest,enable=${{ matrix.variant == 'noble' }}
          type=raw,value=${{ matrix.variant }}
          type=schedule,pattern={{date 'YYYYMMDD'}},enable=${{ matrix.variant == 'noble' }}
          type=schedule,pattern={{date 'YYYYMMDD'}},suffix=${{ matrix.variant }}
    - uses: actions/download-artifact@v6
      with:
        merge-multiple: true
        path: /tmp/image-digests
        pattern: image-digest-${{ matrix.variant}}-*
    - run: |
        docker buildx imagetools create \
          $(jq --compact-output --raw-output '.tags | map("--tag " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf 'ghcr.io/${{ github.repository }}@sha256:%s ' *)
      working-directory: /tmp/image-digests
